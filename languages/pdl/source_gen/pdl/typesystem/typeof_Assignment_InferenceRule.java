package pdl.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.typesystem.inference.EquationInfo;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class typeof_Assignment_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_Assignment_InferenceRule() {
  }
  public void applyRule(final SNode assignment, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    final SNode T_typevar_930174696942622783 = typeCheckingContext.createNewRuntimeTypesVariable();
    {
      SNode _nodeToCheck_1029348928467 = SLinkOperations.getTarget(assignment, MetaAdapterFactory.getContainmentLink(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013be8a6L, 0x7a6e02eb013be8c6L, "expression"));
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:c6ed39d5-68f2-4fc0-b8d2-de0739710f52(pdl.typesystem)", "930174696942623507", 0, null);
      typeCheckingContext.createGreaterThanInequality((SNode) typeCheckingContext.getRepresentative(T_typevar_930174696942622783), (SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:c6ed39d5-68f2-4fc0-b8d2-de0739710f52(pdl.typesystem)", "930174696942623592", true), false, true, _info_12389875345);
    }
    {
      SNode _nodeToCheck_1029348928467 = assignment;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:c6ed39d5-68f2-4fc0-b8d2-de0739710f52(pdl.typesystem)", "930174696942556598", 0, null);
      typeCheckingContext.createGreaterThanInequality((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:c6ed39d5-68f2-4fc0-b8d2-de0739710f52(pdl.typesystem)", "930174696942551897", true), (SNode) typeCheckingContext.getRepresentative(T_typevar_930174696942622783), false, true, _info_12389875345);
    }
    {
      SNode _nodeToCheck_1029348928467 = SLinkOperations.getTarget(assignment, MetaAdapterFactory.getContainmentLink(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013be8a6L, 0x7a6e02eb013be8c2L, "variable"));
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:c6ed39d5-68f2-4fc0-b8d2-de0739710f52(pdl.typesystem)", "930174696942632551", 0, null);
      typeCheckingContext.createGreaterThanInequality((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:c6ed39d5-68f2-4fc0-b8d2-de0739710f52(pdl.typesystem)", "930174696942622544", true), (SNode) typeCheckingContext.getRepresentative(T_typevar_930174696942622783), false, true, _info_12389875345);
    }
  }
  public SAbstractConcept getApplicableConcept() {
    return MetaAdapterFactory.getConcept(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013be8a6L, "pdl.structure.Assignment");
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }
}
