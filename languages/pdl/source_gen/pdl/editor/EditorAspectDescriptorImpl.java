package pdl.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (index_xbvbvu_a0a.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new ArithmeticExpression_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new Assignment_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new BooleanConstant_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new BooleanType_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new Date_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new FloatConstant_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new LogicalExpression_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new OverrideProductInclusion_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new Package_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new PackageInclusionCommand_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new PackageOverrideCommand_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new PassingValue_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new PassingValues_Editor());
      case 13:
        return Collections.<ConceptEditor>singletonList(new Product_Editor());
      case 14:
        return Collections.<ConceptEditor>singletonList(new ProductInclusion_Editor());
      case 15:
        return Collections.<ConceptEditor>singletonList(new Regulation_Editor());
      case 16:
        return Collections.<ConceptEditor>singletonList(new RegulationInclusion_Editor());
      case 17:
        return Collections.<ConceptEditor>singletonList(new Regulations_Editor());
      case 18:
        return Collections.<ConceptEditor>singletonList(new VarDeclaration_Editor());
      case 19:
        return Collections.<ConceptEditor>singletonList(new VarReference_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }



  private static final ConceptSwitchIndex index_xbvbvu_a0a = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013beb4cL), MetaIdFactory.conceptId(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013be8a6L), MetaIdFactory.conceptId(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013ba25cL), MetaIdFactory.conceptId(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013ca1eaL), MetaIdFactory.conceptId(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x47f02710c91ddfb7L), MetaIdFactory.conceptId(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013ba27cL), MetaIdFactory.conceptId(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013beb6cL), MetaIdFactory.conceptId(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x1ad8539c4a8af5d0L), MetaIdFactory.conceptId(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x3c1705fde7c43cf9L), MetaIdFactory.conceptId(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x3bb5f98642d940deL), MetaIdFactory.conceptId(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x3bb5f98642d94121L), MetaIdFactory.conceptId(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x672a35c484820425L), MetaIdFactory.conceptId(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x672a35c484820409L), MetaIdFactory.conceptId(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x1ad8539c4a89c149L), MetaIdFactory.conceptId(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x1ad8539c4a89c185L), MetaIdFactory.conceptId(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x47f02710c91d56f4L), MetaIdFactory.conceptId(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x47f02710c91ddf98L), MetaIdFactory.conceptId(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x47f02710c91d56a1L), MetaIdFactory.conceptId(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013be886L), MetaIdFactory.conceptId(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013be866L)).seal();
}
