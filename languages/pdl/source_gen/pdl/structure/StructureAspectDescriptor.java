package pdl.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAbstractCommand = createDescriptorForAbstractCommand();
  /*package*/ final ConceptDescriptor myConceptAbstractExpression = createDescriptorForAbstractExpression();
  /*package*/ final ConceptDescriptor myConceptAbstractPackageInclusion = createDescriptorForAbstractPackageInclusion();
  /*package*/ final ConceptDescriptor myConceptArithmeticExpression = createDescriptorForArithmeticExpression();
  /*package*/ final ConceptDescriptor myConceptAssignment = createDescriptorForAssignment();
  /*package*/ final ConceptDescriptor myConceptBinaryExpression = createDescriptorForBinaryExpression();
  /*package*/ final ConceptDescriptor myConceptBooleanConstant = createDescriptorForBooleanConstant();
  /*package*/ final ConceptDescriptor myConceptBooleanType = createDescriptorForBooleanType();
  /*package*/ final ConceptDescriptor myConceptDate = createDescriptorForDate();
  /*package*/ final ConceptDescriptor myConceptFloatConstant = createDescriptorForFloatConstant();
  /*package*/ final ConceptDescriptor myConceptLogicalExpression = createDescriptorForLogicalExpression();
  /*package*/ final ConceptDescriptor myConceptPackage = createDescriptorForPackage();
  /*package*/ final ConceptDescriptor myConceptPackageInclusionCommand = createDescriptorForPackageInclusionCommand();
  /*package*/ final ConceptDescriptor myConceptPackageOverrideCommand = createDescriptorForPackageOverrideCommand();
  /*package*/ final ConceptDescriptor myConceptPassingValue = createDescriptorForPassingValue();
  /*package*/ final ConceptDescriptor myConceptPassingValues = createDescriptorForPassingValues();
  /*package*/ final ConceptDescriptor myConceptRegulation = createDescriptorForRegulation();
  /*package*/ final ConceptDescriptor myConceptRegulationInclusion = createDescriptorForRegulationInclusion();
  /*package*/ final ConceptDescriptor myConceptRegulations = createDescriptorForRegulations();
  /*package*/ final ConceptDescriptor myConceptType = createDescriptorForType();
  /*package*/ final ConceptDescriptor myConceptUnaryExpression = createDescriptorForUnaryExpression();
  /*package*/ final ConceptDescriptor myConceptVarDeclaration = createDescriptorForVarDeclaration();
  /*package*/ final ConceptDescriptor myConceptVarReference = createDescriptorForVarReference();
  private final LanguageConceptSwitch myConceptIndex;

  public StructureAspectDescriptor() {
    myConceptIndex = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractCommand, myConceptAbstractExpression, myConceptAbstractPackageInclusion, myConceptArithmeticExpression, myConceptAssignment, myConceptBinaryExpression, myConceptBooleanConstant, myConceptBooleanType, myConceptDate, myConceptFloatConstant, myConceptLogicalExpression, myConceptPackage, myConceptPackageInclusionCommand, myConceptPackageOverrideCommand, myConceptPassingValue, myConceptPassingValues, myConceptRegulation, myConceptRegulationInclusion, myConceptRegulations, myConceptType, myConceptUnaryExpression, myConceptVarDeclaration, myConceptVarReference);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myConceptIndex.index(id)) {
      case LanguageConceptSwitch.AbstractCommand:
        return myConceptAbstractCommand;
      case LanguageConceptSwitch.AbstractExpression:
        return myConceptAbstractExpression;
      case LanguageConceptSwitch.AbstractPackageInclusion:
        return myConceptAbstractPackageInclusion;
      case LanguageConceptSwitch.ArithmeticExpression:
        return myConceptArithmeticExpression;
      case LanguageConceptSwitch.Assignment:
        return myConceptAssignment;
      case LanguageConceptSwitch.BinaryExpression:
        return myConceptBinaryExpression;
      case LanguageConceptSwitch.BooleanConstant:
        return myConceptBooleanConstant;
      case LanguageConceptSwitch.BooleanType:
        return myConceptBooleanType;
      case LanguageConceptSwitch.Date:
        return myConceptDate;
      case LanguageConceptSwitch.FloatConstant:
        return myConceptFloatConstant;
      case LanguageConceptSwitch.LogicalExpression:
        return myConceptLogicalExpression;
      case LanguageConceptSwitch.Package:
        return myConceptPackage;
      case LanguageConceptSwitch.PackageInclusionCommand:
        return myConceptPackageInclusionCommand;
      case LanguageConceptSwitch.PackageOverrideCommand:
        return myConceptPackageOverrideCommand;
      case LanguageConceptSwitch.PassingValue:
        return myConceptPassingValue;
      case LanguageConceptSwitch.PassingValues:
        return myConceptPassingValues;
      case LanguageConceptSwitch.Regulation:
        return myConceptRegulation;
      case LanguageConceptSwitch.RegulationInclusion:
        return myConceptRegulationInclusion;
      case LanguageConceptSwitch.Regulations:
        return myConceptRegulations;
      case LanguageConceptSwitch.Type:
        return myConceptType;
      case LanguageConceptSwitch.UnaryExpression:
        return myConceptUnaryExpression;
      case LanguageConceptSwitch.VarDeclaration:
        return myConceptVarDeclaration;
      case LanguageConceptSwitch.VarReference:
        return myConceptVarReference;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myConceptIndex.index(c);
  }

  private static ConceptDescriptor createDescriptorForAbstractCommand() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pdl", "AbstractCommand", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x2d523c5e4cc4574aL);
    b.class_(false, true, false);
    b.origin("r:1ee7c477-671c-4c79-ab43-202dcf795b45(pdl.structure)/3265739055509559114");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAbstractExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pdl", "AbstractExpression", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013ba1ceL);
    b.class_(false, true, false);
    b.origin("r:1ee7c477-671c-4c79-ab43-202dcf795b45(pdl.structure)/8821991928426635726");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAbstractPackageInclusion() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pdl", "AbstractPackageInclusion", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x3bb5f98642d94102L);
    b.class_(false, true, false);
    b.origin("r:1ee7c477-671c-4c79-ab43-202dcf795b45(pdl.structure)/4302619374064845058");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArithmeticExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pdl", "ArithmeticExpression", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013beb4cL);
    b.class_(false, false, false);
    b.super_("pdl.structure.BinaryExpression", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013bea6bL);
    b.origin("r:1ee7c477-671c-4c79-ab43-202dcf795b45(pdl.structure)/8821991928426654540");
    b.prop("operator", 0x7a6e02eb013beb68L, "8821991928426654568");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAssignment() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pdl", "Assignment", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013be8a6L);
    b.class_(false, false, false);
    b.super_("pdl.structure.AbstractExpression", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013ba1ceL);
    b.origin("r:1ee7c477-671c-4c79-ab43-202dcf795b45(pdl.structure)/8821991928426653862");
    b.aggregate("variable", 0x7a6e02eb013be8c2L).target(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013be866L).optional(false).ordered(true).multiple(false).origin("8821991928426653890").done();
    b.aggregate("expression", 0x7a6e02eb013be8c6L).target(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013ba1ceL).optional(false).ordered(true).multiple(false).origin("8821991928426653894").done();
    b.alias("=");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBinaryExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pdl", "BinaryExpression", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013bea6bL);
    b.class_(false, true, false);
    b.super_("pdl.structure.AbstractExpression", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013ba1ceL);
    b.origin("r:1ee7c477-671c-4c79-ab43-202dcf795b45(pdl.structure)/8821991928426654315");
    b.aggregate("left", 0x7a6e02eb013beb39L).target(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013ba1ceL).optional(false).ordered(true).multiple(false).origin("8821991928426654521").done();
    b.aggregate("right", 0x7a6e02eb013beb3dL).target(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013ba1ceL).optional(false).ordered(true).multiple(false).origin("8821991928426654525").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBooleanConstant() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pdl", "BooleanConstant", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013ba25cL);
    b.class_(false, false, false);
    b.super_("pdl.structure.AbstractExpression", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013ba1ceL);
    b.origin("r:1ee7c477-671c-4c79-ab43-202dcf795b45(pdl.structure)/8821991928426635868");
    b.prop("value", 0x7a6e02eb013ba278L, "8821991928426635896");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBooleanType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pdl", "BooleanType", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013ca1eaL);
    b.class_(false, false, false);
    b.super_("pdl.structure.Type", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013ca206L);
    b.origin("r:1ee7c477-671c-4c79-ab43-202dcf795b45(pdl.structure)/8821991928426701290");
    b.alias("Bool");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pdl", "Date", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x47f02710c91ddfb7L);
    b.class_(false, false, false);
    b.super_("pdl.structure.AbstractCommand", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x2d523c5e4cc4574aL);
    b.origin("r:1ee7c477-671c-4c79-ab43-202dcf795b45(pdl.structure)/5183686124150579127");
    b.prop("day", 0x47f02710c91ddfd3L, "5183686124150579155");
    b.prop("month", 0x47f02710c91ddfd6L, "5183686124150579158");
    b.prop("year", 0x47f02710c91ddfdbL, "5183686124150579163");
    b.alias("[");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFloatConstant() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pdl", "FloatConstant", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013ba27cL);
    b.class_(false, false, false);
    b.super_("pdl.structure.AbstractExpression", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013ba1ceL);
    b.origin("r:1ee7c477-671c-4c79-ab43-202dcf795b45(pdl.structure)/8821991928426635900");
    b.prop("value", 0x7a6e02eb013ba298L, "8821991928426635928");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLogicalExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pdl", "LogicalExpression", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013beb6cL);
    b.class_(false, false, false);
    b.super_("pdl.structure.BinaryExpression", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013bea6bL);
    b.origin("r:1ee7c477-671c-4c79-ab43-202dcf795b45(pdl.structure)/8821991928426654572");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPackage() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pdl", "Package", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x3c1705fde7c43cf9L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:1ee7c477-671c-4c79-ab43-202dcf795b45(pdl.structure)/4329936154813283577");
    b.aggregate("expressions", 0x7a6e02eb013d291aL).target(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013ba1ceL).optional(true).ordered(true).multiple(true).origin("8821991928426735898").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPackageInclusionCommand() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pdl", "PackageInclusionCommand", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x3bb5f98642d940deL);
    b.class_(false, false, false);
    b.super_("pdl.structure.AbstractPackageInclusion", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x3bb5f98642d94102L);
    b.origin("r:1ee7c477-671c-4c79-ab43-202dcf795b45(pdl.structure)/4302619374064845022");
    b.associate("PassingValueToAssign", 0x7a6e02eafebb0fdeL).target(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x672a35c484820425L).optional(false).origin("8821991928384655326").done();
    b.associate("packageToInclude", 0x3c1705fde7c43cf6L).target(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x3c1705fde7c43cf9L).optional(false).origin("4329936154813283574").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPackageOverrideCommand() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pdl", "PackageOverrideCommand", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x3bb5f98642d94121L);
    b.class_(false, false, false);
    b.super_("pdl.structure.AbstractPackageInclusion", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x3bb5f98642d94102L);
    b.origin("r:1ee7c477-671c-4c79-ab43-202dcf795b45(pdl.structure)/4302619374064845089");
    b.associate("assignmentToOverride", 0x3bb5f98642d94140L).target(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x672a35c484820425L).optional(false).origin("4302619374064845120").done();
    b.associate("packageToUse", 0x3bb5f98642d9414aL).target(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x3c1705fde7c43cf9L).optional(false).origin("4302619374064845130").done();
    b.alias("override");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPassingValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pdl", "PassingValue", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x672a35c484820425L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:1ee7c477-671c-4c79-ab43-202dcf795b45(pdl.structure)/7433813253081400357");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPassingValues() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pdl", "PassingValues", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x672a35c484820409L);
    b.class_(false, false, true);
    b.origin("r:1ee7c477-671c-4c79-ab43-202dcf795b45(pdl.structure)/7433813253081400329");
    b.aggregate("listofPassingValues", 0x672a35c484820457L).target(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x672a35c484820425L).optional(true).ordered(true).multiple(true).origin("7433813253081400407").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRegulation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pdl", "Regulation", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x47f02710c91d56f4L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:1ee7c477-671c-4c79-ab43-202dcf795b45(pdl.structure)/5183686124150544116");
    b.associate("extends", 0x47f02710c91f4e00L).target(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x47f02710c91d56f4L).optional(true).origin("5183686124150672896").done();
    b.aggregate("packageList", 0x3c1705fde7c2f696L).target(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x3bb5f98642d94102L).optional(true).ordered(true).multiple(true).origin("4329936154813200022").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRegulationInclusion() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pdl", "RegulationInclusion", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x47f02710c91ddf98L);
    b.class_(false, false, false);
    b.super_("pdl.structure.AbstractCommand", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x2d523c5e4cc4574aL);
    b.origin("r:1ee7c477-671c-4c79-ab43-202dcf795b45(pdl.structure)/5183686124150579096");
    b.associate("definition", 0x47f02710c91ddfb4L).target(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x47f02710c91d56f4L).optional(false).origin("5183686124150579124").done();
    b.aggregate("startDate", 0x47f02710c91ec5f3L).target(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x47f02710c91ddfb7L).optional(false).ordered(true).multiple(false).origin("5183686124150638067").done();
    b.aggregate("endDate", 0x47f02710c91ec5f6L).target(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x47f02710c91ddfb7L).optional(false).ordered(true).multiple(false).origin("5183686124150638070").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRegulations() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pdl", "Regulations", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x47f02710c91d56a1L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:1ee7c477-671c-4c79-ab43-202dcf795b45(pdl.structure)/5183686124150544033");
    b.aggregate("includedRegulations", 0x47f02710c91e5c5eL).target(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x2d523c5e4cc4574aL).optional(false).ordered(true).multiple(true).origin("5183686124150611038").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pdl", "Type", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013ca206L);
    b.class_(false, false, false);
    b.origin("r:1ee7c477-671c-4c79-ab43-202dcf795b45(pdl.structure)/8821991928426701318");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUnaryExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pdl", "UnaryExpression", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013bea4bL);
    b.class_(false, true, false);
    b.super_("pdl.structure.AbstractExpression", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013ba1ceL);
    b.origin("r:1ee7c477-671c-4c79-ab43-202dcf795b45(pdl.structure)/8821991928426654283");
    b.aggregate("original", 0x7a6e02eb013bea67L).target(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013ba1ceL).optional(false).ordered(true).multiple(false).origin("8821991928426654311").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVarDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pdl", "VarDeclaration", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013be886L);
    b.class_(false, false, false);
    b.super_("pdl.structure.AbstractExpression", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013ba1ceL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:1ee7c477-671c-4c79-ab43-202dcf795b45(pdl.structure)/8821991928426653830");
    b.aggregate("initializer", 0x7a6e02eb013be8a2L).target(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013ba1ceL).optional(false).ordered(true).multiple(false).origin("8821991928426653858").done();
    b.alias("var");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVarReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("pdl", "VarReference", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013be866L);
    b.class_(false, false, false);
    b.super_("pdl.structure.AbstractExpression", 0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013ba1ceL);
    b.origin("r:1ee7c477-671c-4c79-ab43-202dcf795b45(pdl.structure)/8821991928426653798");
    b.associate("declaration", 0x7a6e02eb013be882L).target(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL, 0x7a6e02eb013be886L).optional(false).origin("8821991928426653826").done();
    return b.create();
  }
}
