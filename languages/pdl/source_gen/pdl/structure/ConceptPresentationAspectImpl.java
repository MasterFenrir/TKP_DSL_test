package pdl.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private final ConceptPresentation props_BRR_Afg_Inst = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BRR_Afgeleid = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BRR_Instabiel = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_BRR_Referentie = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Basisrekenregel = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Bibliotheek = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Datum = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Fonds = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_InclusieRef = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_InclusieStatement = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Product = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ProductInclusie = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ProductPakketInclusie = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ProductStatement = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Productelement = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Productpakket = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ProductpakketRef = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_Reglement = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_ReglementInclusie = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_VervangProductPakket = new ConceptPresentationBuilder().create();
  private final ConceptPresentation props_VervangProductPakketStatement = new ConceptPresentationBuilder().create();

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.BRR_Afg_Inst:
        return props_BRR_Afg_Inst;
      case LanguageConceptSwitch.BRR_Afgeleid:
        return props_BRR_Afgeleid;
      case LanguageConceptSwitch.BRR_Instabiel:
        return props_BRR_Instabiel;
      case LanguageConceptSwitch.BRR_Referentie:
        return props_BRR_Referentie;
      case LanguageConceptSwitch.Basisrekenregel:
        return props_Basisrekenregel;
      case LanguageConceptSwitch.Bibliotheek:
        return props_Bibliotheek;
      case LanguageConceptSwitch.Datum:
        return props_Datum;
      case LanguageConceptSwitch.Fonds:
        return props_Fonds;
      case LanguageConceptSwitch.InclusieRef:
        return props_InclusieRef;
      case LanguageConceptSwitch.InclusieStatement:
        return props_InclusieStatement;
      case LanguageConceptSwitch.Product:
        return props_Product;
      case LanguageConceptSwitch.ProductInclusie:
        return props_ProductInclusie;
      case LanguageConceptSwitch.ProductPakketInclusie:
        return props_ProductPakketInclusie;
      case LanguageConceptSwitch.ProductStatement:
        return props_ProductStatement;
      case LanguageConceptSwitch.Productelement:
        return props_Productelement;
      case LanguageConceptSwitch.Productpakket:
        return props_Productpakket;
      case LanguageConceptSwitch.ProductpakketRef:
        return props_ProductpakketRef;
      case LanguageConceptSwitch.Reglement:
        return props_Reglement;
      case LanguageConceptSwitch.ReglementInclusie:
        return props_ReglementInclusie;
      case LanguageConceptSwitch.VervangProductPakket:
        return props_VervangProductPakket;
      case LanguageConceptSwitch.VervangProductPakketStatement:
        return props_VervangProductPakketStatement;
    }
    return null;
  }
}
