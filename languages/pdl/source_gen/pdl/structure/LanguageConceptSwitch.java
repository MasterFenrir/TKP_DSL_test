package pdl.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AbstractCommand = 0;
  public static final int AbstractPackageInclusion = 1;
  public static final int BRR_Afg_Inst = 2;
  public static final int BRR_Afgeleid = 3;
  public static final int BRR_Instabiel = 4;
  public static final int Basisrekenregel = 5;
  public static final int Bibliotheek = 6;
  public static final int Date = 7;
  public static final int ENExpressie = 8;
  public static final int OverrideProductInclusion = 9;
  public static final int Package = 10;
  public static final int PackageInclusionCommand = 11;
  public static final int PackageOverrideCommand = 12;
  public static final int PassingValue = 13;
  public static final int PassingValues = 14;
  public static final int Product = 15;
  public static final int ProductInclusion = 16;
  public static final int Regulation = 17;
  public static final int RegulationInclusion = 18;
  public static final int Regulations = 19;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL);
    builder.put(0x2d523c5e4cc4574aL, AbstractCommand);
    builder.put(0x3bb5f98642d94102L, AbstractPackageInclusion);
    builder.put(0x28a2bd7555a9b37aL, BRR_Afg_Inst);
    builder.put(0x28a2bd7555a9b378L, BRR_Afgeleid);
    builder.put(0x28a2bd7555a9b379L, BRR_Instabiel);
    builder.put(0x28a2bd7555a9b371L, Basisrekenregel);
    builder.put(0x28a2bd7555a9b363L, Bibliotheek);
    builder.put(0x47f02710c91ddfb7L, Date);
    builder.put(0x28a2bd7555a85e72L, ENExpressie);
    builder.put(0x1ad8539c4a8af5d0L, OverrideProductInclusion);
    builder.put(0x3c1705fde7c43cf9L, Package);
    builder.put(0x3bb5f98642d940deL, PackageInclusionCommand);
    builder.put(0x3bb5f98642d94121L, PackageOverrideCommand);
    builder.put(0x672a35c484820425L, PassingValue);
    builder.put(0x672a35c484820409L, PassingValues);
    builder.put(0x1ad8539c4a89c149L, Product);
    builder.put(0x1ad8539c4a89c185L, ProductInclusion);
    builder.put(0x47f02710c91d56f4L, Regulation);
    builder.put(0x47f02710c91ddf98L, RegulationInclusion);
    builder.put(0x47f02710c91d56a1L, Regulations);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
