package pdl.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AbstractCommand = 0;
  public static final int Date = 1;
  public static final int Regulation = 2;
  public static final int RegulationInclusion = 3;
  public static final int Regulations = 4;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xb4f0e2b8f6a24a0aL, 0x9dece769e700ea8cL);
    builder.put(0x2d523c5e4cc4574aL, AbstractCommand);
    builder.put(0x47f02710c91ddfb7L, Date);
    builder.put(0x47f02710c91d56f4L, Regulation);
    builder.put(0x47f02710c91ddf98L, RegulationInclusion);
    builder.put(0x47f02710c91d56a1L, Regulations);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
